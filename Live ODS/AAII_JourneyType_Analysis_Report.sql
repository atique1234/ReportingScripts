USE [REZAKWB01]
GO

/****** Object:  StoredProcedure [wb].[AAII_JourneyType_Analysis_Report]    Script Date: 10/22/2015 15:25:48 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO
















-- =============================================
-- Author:		<Md. Azimuddin Khan>
-- Create date: <2015-03-03,,>
-- Description:	<Daily Ancillary Revenue by flight date>
-- =============================================
-- Author:		<S M Atiqur Rahman>
-- Create date: <2015-06-01,,>
-- Description:	<Addition of Nationality, City, AgeGroup>
-- =============================================
--ALTER PROCEDURE [wb].[AAII_JourneyType_Analysis_Report]

--AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

DECLARE     @MYDateUTC			 datetime,
			@departureStart      datetime,
			@departureEnd		 datetime,
			@timeZone            varchar(4)
 

	--SET @MYDateUTC ='2011-02-16'
	
	--SET @MYDateUTC  = ods.ConvertDate( 'MY', GETDATE(),0,0)
	----SET @MYDateUTC  = GETDATE()
	-- --SET @departureStart =CAST(CONVERT(VARCHAR, DATEADD(s, 1,DATEADD(mm, DATEDIFF(m,0,DateAdd(month,0,@MYDateUTC)),0)), 101) AS DateTime) 
	--SET @departureStart = CONVERT(DATETIME,datediff(day,0,dateadd(week,-1,@MYDateUTC)))
	--SET @departureEnd   = CONVERT(DATETIME,datediff(day,0,@MYDateUTC))
	
	
	SET @timeZone         = GETDATE()
	--SET @MYDateUTC ='2011-02-16'
	SET @MYDateUTC      = ods.ConvertDate( 'MY', GETDATE(),0,0)
	SET @departureStart = ods.ConvertDate( @timeZone,CAST(CONVERT(VARCHAR, DATEADD(week, -1, @MYDateUTC-1), 101) AS DateTime) , 1, 0 )
	SET @departureEnd   = ods.ConvertDate( @timeZone, CAST(CONVERT(VARCHAR,@MYDateUTC-1, 101) AS DateTime) , 1, 0 )
	
	--SET @MYDateUTC  = GETDATE()
	--SET @departureStart = CONVERT(DATETIME,datediff(day,0,dateadd(week,-1,@MYDateUTC)))
	--SET @departureEnd   = CONVERT(DATETIME,datediff(day,0,@MYDateUTC))
	 

	print @MYDateUTC 
	print @departureStart
	print @departureEnd

BEGIN TRY DROP TABLE #PASSENGER_AGE END TRY BEGIN CATCH END CATCH

SELECT PJS.PASSENGERID,PJS.SEGMENTID,PJS.DEPARTUREDATE,PJS.DEPARTURESTATION,PJS.ARRIVALSTATION,PJS.JOURNEYNUMBER,PJS.SEGMENTNUMBER,PJS.FAREJOURNEYTYPE,
PJL.INVENTORYLEGID,
isnull(carr_map.mappedcarrier ,IL.CARRIERCODE) CARRIERCODE,IL.FLIGHTNUMBER,
BP.BOOKINGID,BP.FIRSTNAME,BP.LASTNAME,BP.NATIONALITY,BP.DOB,DATEDIFF(hour,bp.dob,pjs.departureDate)/8766 AS PassengerAge,
BK.RECORDLOCATOR, BK.BOOKINGDATE,
PJC.CURRENCYCODE,
SUM(CASE WHEN PJC.CHARGETYPE IN (0,1,7,19) THEN PJC.CHARGEAMOUNT*CTM.POSITIVENEGATIVEFLAG ELSE 0 END) BASE_FARE,
SUM(CASE WHEN PJC.CHARGECODE IN ('FUEL','FUEX','DOMS') THEN PJC.CHARGEAMOUNT*CTM.POSITIVENEGATIVEFLAG ELSE 0 END) FUEL_AMOUNT,
SUM(CASE WHEN PJC.CHARGETYPE = 8 THEN PJC.CHARGEAMOUNT*CTM.POSITIVENEGATIVEFLAG ELSE 0 END) CONNECTION_AMOUNT,
SUM(CASE WHEN PJC.CURRENCYCODE = 'MYR' THEN
										CASE WHEN PJC.CHARGETYPE IN (0,1,7,19) THEN PJC.CHARGEAMOUNT*CTM.POSITIVENEGATIVEFLAG ELSE 0 END
		 ELSE
										CASE WHEN PJC.CHARGETYPE IN (0,1,7,19) THEN PJC.CHARGEAMOUNT*CTM.POSITIVENEGATIVEFLAG*(1/CC.CONVERSIONRATE) ELSE 0 END
	END) BASEFARE_MYR,
SUM(CASE WHEN PJC.CURRENCYCODE = 'MYR' THEN
										CASE WHEN PJC.CHARGECODE IN ('FUEL','FUEX','DOMS') THEN PJC.CHARGEAMOUNT*CTM.POSITIVENEGATIVEFLAG ELSE 0 END
		 ELSE
										CASE WHEN PJC.CHARGECODE IN ('FUEL','FUEX','DOMS') THEN PJC.CHARGEAMOUNT*CTM.POSITIVENEGATIVEFLAG*(1/CC.CONVERSIONRATE) ELSE 0 END
	END) FUELAMT_MYR,
SUM(CASE WHEN PJC.CURRENCYCODE = 'MYR' THEN
										CASE WHEN PJC.CHARGETYPE = 8 THEN PJC.CHARGEAMOUNT*CTM.POSITIVENEGATIVEFLAG ELSE 0 END
		 ELSE
										CASE WHEN PJC.CHARGETYPE = 8 THEN PJC.CHARGEAMOUNT*CTM.POSITIVENEGATIVEFLAG*(1/CC.CONVERSIONRATE) ELSE 0 END
	END) CONNECTIONAMOUNT_MYR
INTO #PASSENGER_AGE
FROM
(
--SELECT  * FROM ODS.PASSENGERJOURNEYSEGMENT
--WHERE DEPARTUREDATE >= @departureStart AND DEPARTUREDATE < @departureEnd AND BOOKINGSTATUS = 'HK' 
 select pjs.* from ODS.PASSENGERJOURNEYSEGMENT pjs
	inner join
	(
	SELECT distinct passengerid,journeynumber FROM ODS.PASSENGERJOURNEYSEGMENT
	WHERE DEPARTUREDATE >= @departureStart AND DEPARTUREDATE < @departureEnd AND BOOKINGSTATUS = 'HK' 
	--and segmentnumber = 1
	)t
	on t.passengerid = pjs.passengerid
	and t.journeynumber = pjs.journeynumber
) PJS
JOIN
ODS.PASSENGERJOURNEYLEG PJL
ON
PJS.PASSENGERID = PJL.PASSENGERID
AND 
PJS.SEGMENTID = PJL.SEGMENTID
JOIN
ODS.INVENTORYLEG IL
ON
PJL.INVENTORYLEGID = IL.INVENTORYLEGID
AND
IL.CARRIERCODE <> 'BF'
AND IL.STATUS <> 2
AND IL.LID > 0
JOIN
ODS.BOOKINGPASSENGER BP
ON
PJS.PASSENGERID = BP.PASSENGERID
JOIN
ODS.BOOKING BK
ON
BP.BOOKINGID = BK.BOOKINGID
and BK.STATUS IN (2,3)
LEFT JOIN
ODS.PASSENGERJOURNEYCHARGE PJC
ON
PJS.PASSENGERID = PJC.PASSENGERID
AND
PJS.SEGMENTID = PJC.SEGMENTID
LEFT JOIN
DW.CHARGETYPEMATRIX CTM
ON
PJC.CHARGETYPE = CTM.CHARGETYPEID
LEFT JOIN
dw.CurrencyConversionHistoryDecompressed CC
ON
CC.TOCURRENCYCODE = PJC.CURRENCYCODE
AND
CC.FROMCURRENCYCODE = 'MYR'
AND
CONVERT(DATE,CC.CONVERSIONDATE,110) = CONVERT(DATE,PJC.CREATEDDATE,110)
LEFT JOIN 
AAII_CARRIER_MAPPING carr_map
on carr_map.carriercode = il.carriercode
and ltrim(RTRIM(carr_map.flightnumber)) = ltrim(RTRIM(il.flightnumber))

GROUP BY PJS.PASSENGERID,PJS.SEGMENTID,PJS.DEPARTUREDATE,PJS.DEPARTURESTATION,PJS.ARRIVALSTATION,PJS.JOURNEYNUMBER,PJS.SEGMENTNUMBER,PJS.FAREJOURNEYTYPE,
PJL.INVENTORYLEGID,
isnull(carr_map.mappedcarrier ,IL.CARRIERCODE),IL.FLIGHTNUMBER,
BP.BOOKINGID,BP.FIRSTNAME,BP.LASTNAME,BP.NATIONALITY,BP.DOB,DATEDIFF(hour,bp.dob,pjs.departureDate)/8766,
BK.RECORDLOCATOR, BK.BOOKINGDATE,
PJC.CURRENCYCODE

--SELECT * FROM #PASSENGER WHERE passengerage = '0' FAREJOURNEYTYPE = 4
--ORDER BY PASSENGERID,SEGMENTID

BEGIN TRY DROP TABLE #PASSENGER END TRY BEGIN CATCH END CATCH

SELECT PASSENGERID,SEGMENTID,DEPARTUREDATE,DEPARTURESTATION,ARRIVALSTATION,JOURNEYNUMBER,SEGMENTNUMBER,FAREJOURNEYTYPE,
INVENTORYLEGID,
CARRIERCODE,FLIGHTNUMBER,
BOOKINGID,FIRSTNAME,LASTNAME,NATIONALITY,DOB,

(CASE WHEN PassengerAge>=0 and PassengerAge<12 then '<12'
     WHEN PassengerAge>=12 and PassengerAge<=17 then '12-17'
     WHEN PassengerAge>=18 and PassengerAge<=24 then '18-24'
     WHEN PassengerAge>=25 and PassengerAge<=30 then '25-30'
     WHEN PassengerAge>=31 and PassengerAge<=35 then '31-35'
     WHEN PassengerAge>=36 and PassengerAge<=44 then '36-44'
     WHEN PassengerAge>=45 and PassengerAge<=54 then '45-54'
     WHEN PassengerAge>=55 and PassengerAge<=64 then '55-64'
     WHEN PassengerAge>=65 and PassengerAge<=75 then '65-75'
     WHEN PassengerAge>75 then '>75'
     end) as Passenger_AgeGroup,
RECORDLOCATOR, BOOKINGDATE,
CURRENCYCODE,
SUM(BASE_FARE) BASE_FARE,
SUM(FUEL_AMOUNT) FUEL_AMOUNT,
SUM(CONNECTION_AMOUNT) CONNECTION_AMOUNT,
SUM(BASEFARE_MYR) BASEFARE_MYR,
SUM(FUELAMT_MYR) FUELAMT_MYR,
SUM(CONNECTIONAMOUNT_MYR) CONNECTIONAMOUNT_MYR

into #PASSENGER
from #PASSENGER_AGE
group by PASSENGERID,SEGMENTID,DEPARTUREDATE,DEPARTURESTATION,ARRIVALSTATION,JOURNEYNUMBER,SEGMENTNUMBER,FAREJOURNEYTYPE,
INVENTORYLEGID,
CARRIERCODE,FLIGHTNUMBER,
BOOKINGID,FIRSTNAME,LASTNAME,NATIONALITY,DOB,

(CASE WHEN PassengerAge>=0 and PassengerAge<12 then '<12'
     WHEN PassengerAge>=12 and PassengerAge<=17 then '12-17'
     WHEN PassengerAge>=18 and PassengerAge<=24 then '18-24'
     WHEN PassengerAge>=25 and PassengerAge<=30 then '25-30'
     WHEN PassengerAge>=31 and PassengerAge<=35 then '31-35'
     WHEN PassengerAge>=36 and PassengerAge<=44 then '36-44'
     WHEN PassengerAge>=45 and PassengerAge<=54 then '45-54'
     WHEN PassengerAge>=55 and PassengerAge<=64 then '55-64'
     WHEN PassengerAge>=65 and PassengerAge<=75 then '65-75'
     WHEN PassengerAge>75 then '>75'
     end) ,
RECORDLOCATOR, BOOKINGDATE,
CURRENCYCODE

BEGIN TRY DROP TABLE #PASSENGERFLYTHRU END TRY BEGIN CATCH END CATCH

SELECT
A.PASSENGERID,A.NATIONALITY PASSENGER_NATIONALITY,A.Passenger_AgeGroup,
DATEDIFF(hour, IL1.STAUTC
, IL2.STDUTC) as hourDiff,
'                         ' TransitTime,
'FLYTHRU' JOURNEYTYPE,
(CASE WHEN A.SEGMENTNUMBER = 1 THEN '1ST LEG' ELSE '2ND LEG' END) LEG_SEQUENCE,
A.SEGMENTID LEG1_SEGMENTID,A.DEPARTUREDATE LEG1_DEPARTUREDATE,A.DEPARTURESTATION LEG1_DEPARTURESTATION,A.ARRIVALSTATION LEG1_ARRIVALSTATION,A.CARRIERCODE LEG1_CARRIERCODE,A.FLIGHTNUMBER LEG1_FLIGHTNUMBER,
A.BASEFARE_MYR LEG1_BASFARE_MYR,A.FUELAMT_MYR LEG1_FUELAMT_MYR,A.CONNECTIONAMOUNT_MYR LEG1_CONNECTIONAMOUNT_MYR,
B.SEGMENTID LEG2_SEGMENTID,B.DEPARTUREDATE LEG2_DEPARTUREDATE,B.DEPARTURESTATION LEG2_DEPARTURESTATION,B.ARRIVALSTATION LEG2_ARRIVALSTATION,B.CARRIERCODE LEG2_CARRIERCODE,B.FLIGHTNUMBER LEG2_FLIGHTNUMBER,
B.BASEFARE_MYR LEG2_BASFARE_MYR,B.FUELAMT_MYR LEG2_FUELAMT_MYR,B.CONNECTIONAMOUNT_MYR LEG2_CONNECTIONAMOUNT_MYR
INTO #PASSENGERFLYTHRU
FROM
(SELECT * FROM #PASSENGER WHERE FAREJOURNEYTYPE = 4) A
LEFT JOIN
#PASSENGER B
ON
B.FAREJOURNEYTYPE = 4
AND
A.SEGMENTNUMBER = 1
AND
B.SEGMENTNUMBER = 2
AND
A.PASSENGERID = B.PASSENGERID
AND
A.JOURNEYNUMBER = B.JOURNEYNUMBER
LEFT JOIN ODS.INVENTORYLEG IL1
on IL1.INVENTORYLEGID = A.INVENTORYLEGID
LEFT JOIN ODS.INVENTORYLEG IL2
on IL2.INVENTORYLEGID = B.INVENTORYLEGID




--to make connecting flights with BF carrier point to point
Update p set p.JOURNEYTYPE = 'FERRY'
from #PASSENGERFLYTHRU p
join 
(
	select distinct t.passengerid,t.journeynumber,t.LEG1_SEGMENTID from
	(
		select pjl.passengerid,pjl.journeynumber,pjl.segmentid ,t.LEG1_SEGMENTID
		from ODS.PASSENGERJOURNEYLEG pjl
		join
		(select passengerid,LEG1_SEGMENTID from #PASSENGERFLYTHRU 
		where LEG_SEQUENCE = '1ST LEG' and LEG2_SEGMENTID is null
		) t
		on pjl.passengerid = t.passengerid
		and pjl.segmentid = t.LEG1_SEGMENTID
	)t
	join ODS.PASSENGERJOURNEYLEG pjl
	on pjl.passengerid = t.passengerid
	and pjl.journeynumber = t.journeynumber
	and pjl.segmentid <> t.segmentid
	JOIN
	ODS.INVENTORYLEG IL
	ON
	PJL.INVENTORYLEGID = IL.INVENTORYLEGID
	AND
	IL.CARRIERCODE = 'BF'
)t
on p.passengerid = t.passengerid
and p.LEG1_SEGMENTID = t.LEG1_SEGMENTID


--mark exception cases
Update p set p.JOURNEYTYPE = 'ERROR'
from #PASSENGERFLYTHRU p
where journeytype = 'FLYTHRU' 
and leg_sequence = '1ST LEG'
and leg2_segmentid is null

Update p set p.TransitTime = 
ISNULL((
  CASE WHEN ISNULL(hourDiff,0) = 0 then '0'
       WHEN hourDiff>0 and hourDiff<=2 then '0-2'
       WHEN hourDiff>2 and hourDiff<=4 then '2-4'
       WHEN hourDiff>4 and hourDiff<=8 then '4-8'
       WHEN hourDiff>8 and hourDiff<=12 then '8-12'
       WHEN hourDiff>12 and hourDiff<=18 then '12-18'
       WHEN hourDiff>18 and hourDiff<=24 then '18-24'
       WHEN hourDiff>24 and hourDiff<=36 then '24-36'
       WHEN hourDiff>36 and hourDiff<=48 then '36-48'
       WHEN hourDiff>48 then '>48' end
),0)
from #PASSENGERFLYTHRU p

BEGIN TRY DROP TABLE #PASSENGERSELFCONNECTING END TRY BEGIN CATCH END CATCH

SELECT 
A.PASSENGERID,A.NATIONALITY PASSENGER_NATIONALITY,A.Passenger_AgeGroup,
DATEDIFF(hour, IL1.STAUTC
, IL2.STDUTC) as hourDiff,
'                         ' TransitTime,
(CASE WHEN (B.SEGMENTID IS NOT NULL OR A.LASTNAME <> 'TBA') AND (A.DEPARTURESTATION <> B.ARRIVALSTATION) THEN 'SELF-CONNECTING' ELSE 'POINT TO POINT' END) JOURNEYTYPE,
'1ST LEG' LEG_SEQUENCE,
A.SEGMENTID LEG1_SEGMENTID,A.DEPARTUREDATE LEG1_DEPARTUREDATE,A.DEPARTURESTATION LEG1_DEPARTURESTATION,A.ARRIVALSTATION LEG1_ARRIVALSTATION,A.CARRIERCODE LEG1_CARRIERCODE,A.FLIGHTNUMBER LEG1_FLIGHTNUMBER,
A.BASEFARE_MYR LEG1_BASFARE_MYR,A.FUELAMT_MYR LEG1_FUELAMT_MYR,A.CONNECTIONAMOUNT_MYR LEG1_CONNECTIONAMOUNT_MYR,
B.SEGMENTID LEG2_SEGMENTID,B.DEPARTUREDATE LEG2_DEPARTUREDATE,B.DEPARTURESTATION LEG2_DEPARTURESTATION,B.ARRIVALSTATION LEG2_ARRIVALSTATION,B.CARRIERCODE LEG2_CARRIERCODE,B.FLIGHTNUMBER LEG2_FLIGHTNUMBER,
B.BASEFARE_MYR LEG2_BASFARE_MYR,B.FUELAMT_MYR LEG2_FUELAMT_MYR,B.CONNECTIONAMOUNT_MYR LEG2_CONNECTIONAMOUNT_MYR
 INTO #PASSENGERSELFCONNECTING
 FROM 
(SELECT * FROM #PASSENGER WHERE FAREJOURNEYTYPE <> '4') A
LEFT JOIN
#PASSENGER B
ON
B.FAREJOURNEYTYPE <> '4'
AND LTRIM(RTRIM(A.FirstName)) = LTRIM(RTRIM(B.FirstName)) 
and LTRIM(RTRIM(A.LastName)) = LTRIM(RTRIM(B.LastName))
and A.DOB = B.DOB
and DATEDIFF(DD, A.DepartureDate, B.DepartureDate) between 0 and 2
and A.DepartureStation <> B.ArrivalStation
and A.ArrivalStation = B.DepartureStation
LEFT JOIN ODS.INVENTORYLEG IL1
on IL1.INVENTORYLEGID = A.INVENTORYLEGID
LEFT JOIN ODS.INVENTORYLEG IL2
on IL2.INVENTORYLEGID = B.INVENTORYLEGID


Update p set p.TransitTime = 
ISNULL((
  CASE WHEN ISNULL(hourDiff,0) = 0 then '0'
       WHEN hourDiff>0 and hourDiff<=2 then '0-2'
       WHEN hourDiff>2 and hourDiff<=4 then '2-4'
       WHEN hourDiff>4 and hourDiff<=8 then '4-8'
       WHEN hourDiff>8 and hourDiff<=12 then '8-12'
       WHEN hourDiff>12 and hourDiff<=18 then '12-18'
       WHEN hourDiff>18 and hourDiff<=24 then '18-24'
       WHEN hourDiff>24 and hourDiff<=36 then '24-36'
       WHEN hourDiff>36 and hourDiff<=48 then '36-48'
       WHEN hourDiff>48 then '>48' end
),0)
from #PASSENGERSELFCONNECTING p


BEGIN TRY DROP TABLE #PASSENGERALL END TRY BEGIN CATCH END CATCH

SELECT *
INTO #PASSENGERALL
FROM
(
SELECT * FROM #PASSENGERFLYTHRU
UNION
SELECT * FROM #PASSENGERSELFCONNECTING) X



--SELECT PASSENGERID,LEG1_SEGMENTID,COUNT(*) FROM #PASSENGERALL WHERE JOURNEYTYPE = 'SELF-CONNECTING'
----AND PASSENGERID NOT IN (SELECT PASSENGERID FROM #PASSENGER WHERE LASTNAME = 'TBA')
--GROUP BY PASSENGERID,LEG1_SEGMENTID
--HAVING COUNT(*) > 1
--ORDER BY PASSENGERID,LEG1_SEGMENTID







--SELECT * FROM #PASSENGER
--WHERE PASSENGERID = '213038360'

--SELECT * FROM #PASSENGERALL

--SELECT * FROM #PASSENGER WHERE SEGMENTID IN ('331628359','319598262','341019492','382498894','371564825','391440316','319407726')

--SELECT * FROM ODS.BOOKING WHERE BOOKINGID = '109342127'

BEGIN TRY DROP TABLE #FINAL END TRY BEGIN CATCH END CATCH

SELECT  DATEPART(YYYY,LEG1_DEPARTUREDATE) YEAR,DATEPART(MM,LEG1_DEPARTUREDATE) MTH,
        (CASE WHEN JOURNEYTYPE = 'FERRY' THEN 'POINT TO POINT'
         WHEN JOURNEYTYPE = 'ERROR' THEN 'EXCEPTION'
         ELSE JOURNEYTYPE END) JOURNEYTYPE,PASSENGER_NATIONALITY,Passenger_AgeGroup,TransitTime,
		LEG1_CARRIERCODE,LEG1_FLIGHTNUMBER,LEG1_DEPARTURESTATION,LEG1_ARRIVALSTATION,LEG1_DEPARTUREDATE,
	    LEG2_CARRIERCODE,LEG2_FLIGHTNUMBER,LEG2_DEPARTURESTATION,LEG2_ARRIVALSTATION,LEG2_DEPARTUREDATE,
		COUNT(DISTINCT LEG1_SEGMENTID)  NO_OF_PASSENGER,
		SUM(LEG1_BASFARE_MYR) LEG1_BASEFARE_MYR,
		SUM(LEG1_FUELAMT_MYR) LEG1_FUELAMT_MYR,
		SUM(LEG1_CONNECTIONAMOUNT_MYR) LEG1_CONNECTIONAMOUNT_MYR,
		SUM(LEG2_BASFARE_MYR) LEG2_BASEFARE_MYR,
		SUM(LEG2_FUELAMT_MYR) LEG2_FUELAMT_MYR,
		SUM(LEG2_CONNECTIONAMOUNT_MYR) LEG2_CONNECTIONAMOUNT_MYR
		INTO #FINAL
		FROM #PASSENGERALL  where LEG_SEQUENCE = '1ST LEG'
		GROUP BY DATEPART(YYYY,LEG1_DEPARTUREDATE),DATEPART(MM,LEG1_DEPARTUREDATE),JOURNEYTYPE,
		PASSENGER_NATIONALITY,Passenger_AgeGroup,TransitTime,
		LEG1_CARRIERCODE,LEG1_FLIGHTNUMBER,LEG1_DEPARTURESTATION,LEG1_ARRIVALSTATION,LEG1_DEPARTUREDATE,
	    LEG2_CARRIERCODE,LEG2_FLIGHTNUMBER,LEG2_DEPARTURESTATION,LEG2_ARRIVALSTATION,LEG2_DEPARTUREDATE
		ORDER BY LEG1_CARRIERCODE,LEG1_FLIGHTNUMBER,JOURNEYTYPE,PASSENGER_NATIONALITY,Passenger_AgeGroup,TransitTime



BEGIN TRY DROP TABLE AAII_JOURNEY_TYPE_ANALYSIS_TMP END TRY BEGIN CATCH END CATCH


select t.YEAR,t.MTH,t.JOURNEYTYPE,t.PASSENGER_NATIONALITY,Passenger_AgeGroup,TransitTime,
t.LEG1_CARRIERCODE,t.LEG1_FLIGHTNUMBER,
t.LEG1_DEPARTURESTATION,s1.citycode  LEG1_DEPARTURECITY,s1.countrycode LEG1_DEPARTURECOUNTRY,
t.LEG1_ARRIVALSTATION,s2.citycode LEG1_ARRIVALCITY,s2.countrycode LEG1_ARRIVALCOUNTRY,
t.LEG1_DEPARTUREDATE,
t.LEG2_CARRIERCODE,t.LEG2_FLIGHTNUMBER,
t.LEG2_DEPARTURESTATION,s3.citycode LEG2_DEPARTURECITY,s3.countrycode LEG2_DEPARTURECOUNTRY,
t.LEG2_ARRIVALSTATION,s4.citycode LEG2_ARRIVALCITY,s4.countrycode LEG2_ARRIVALCOUNTRY,
t.LEG2_DEPARTUREDATE,
t.NO_OF_PASSENGER,
t.LEG1_BASEFARE_MYR,
t.LEG1_FUELAMT_MYR,
t.LEG1_CONNECTIONAMOUNT_MYR,
t.LEG2_BASEFARE_MYR,
t.LEG2_FUELAMT_MYR,
t.LEG2_CONNECTIONAMOUNT_MYR

into AAII_JOURNEY_TYPE_ANALYSIS_TMP

from #FINAL t
left join ods.station s1
on s1.stationcode = t.leg1_departurestation
left join ods.station s2
on s2.stationcode = t.LEG1_ARRIVALSTATION
left join ods.station s3
on s3.stationcode = t.leg2_departurestation
left join ods.station s4
on s4.stationcode = t.LEG2_ARRIVALSTATION

END












GO


