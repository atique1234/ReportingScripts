USE [REZAKWB01]
GO

/****** Object:  StoredProcedure [dbo].[SALES_BY_BOOKING_CURRENCY_LIVE]    Script Date: 10/26/2015 10:10:22 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO






--ALTER PROCEDURE [dbo].[SALES_BY_BOOKING_CURRENCY_LIVE]
--AS

BEGIN

SET NOCOUNT ON

DECLARE

@MYDateUTC DATETIME,
@StartDateUTC DATETIME,
@EndDateUTC DATETIME,
@FirstDayofYear DATETIME

SET @MYDateUTC = GETDATE()
SET @StartDateUTC = DATEADD(DD,-31,CONVERT(DATE,@MYDateUTC,110))
SET @EndDateUTC = CONVERT(DATE,DATEADD(day,1,@MYDateUTC),110)
--DATEADD(DD,7,DATEADD(WEEK,DATEDIFF(WEEK,0,@StartDateUTC),0))
SET @FirstDayofYear = DATEADD(YEAR,DATEDIFF(YEAR,0,@MYDateUTC),0)

select @FirstDayofYear = (case when @StartDateUTC < @FirstDayofYear then @StartDateUTC else @FirstDayofYear end)
	  

print @MYDateUTC
print @StartDateUTC
print @EndDateUTC
print @FirstDayofYear




BEGIN TRY DROP TABLE #PASSENGERS END TRY BEGIN CATCH END CATCH

SELECT BK.BOOKINGID,BK.BOOKINGDATE,
BP.PASSENGERID,
PJS.SEGMENTID,PJS.JOURNEYNUMBER,PJS.SEGMENTNUMBER,PJS.FAREJOURNEYTYPE,
PJL.INVENTORYLEGID,
IL.CARRIERCODE,IL.DEPARTUREDATE

INTO #PASSENGERS
FROM
(SELECT * FROM ODS.BOOKING
WHERE BOOKINGDATE >= @startDateUTC AND BOOKINGDATE < @endDateUTC AND STATUS IN (2,3)) BK
--WHERE BOOKINGDATE >= '2013-12-20' AND BOOKINGDATE < '2015-08-20' AND STATUS IN (2,3)) BK
JOIN
ODS.BOOKINGPASSENGER BP
ON
BK.BOOKINGID = BP.BOOKINGID
JOIN
ODS.PASSENGERJOURNEYSEGMENT PJS
ON
BP.PASSENGERID = PJS.PASSENGERID
JOIN
ODS.PASSENGERJOURNEYLEG PJL
ON
PJS.PASSENGERID = PJL.PASSENGERID
AND
PJS.SEGMENTID = PJL.SEGMENTID
JOIN
ODS.INVENTORYLEG IL
ON
PJL.INVENTORYLEGID = IL.INVENTORYLEGID
AND IL.CARRIERCODE <> 'BF'
AND IL.STATUS <> 2
AND IL.LID > 0
left join AAII_CHARTERED_FLIGHTS FLT
on FLT.Inventorylegid = IL.INVENTORYLEGID
where FLT.Inventorylegid is null
  
  
  

--select dbo.isAncillaryFee('AFCB')


BEGIN TRY DROP TABLE #PJCREVENUE END TRY BEGIN CATCH END CATCH

SELECT P.*,PJC.CurrencyCode,PJC.CREATEDDATE,
SUM(CASE WHEN PJC.CHARGETYPE IN (0,1,7,19)
THEN PJC.CHARGEAMOUNT*CTM.POSITIVENEGATIVEFLAG ELSE 0 END) 
+ SUM(CASE WHEN PJC.CHARGECODE IN ('KLIA2')
THEN PJC.CHARGEAMOUNT*CTM.POSITIVENEGATIVEFLAG ELSE 0 END) FARE_REVENUE,
SUM(CASE WHEN PJC.CHARGECODE IN ('FUEL','FUEX','DOMS')
THEN PJC.CHARGEAMOUNT*CTM.POSITIVENEGATIVEFLAG ELSE 0 END) FUEL_AMOUNT,

                                   
SUM(CASE WHEN dbo.isAncillaryFee(PJC.CHARGECODE) = 1
    OR PJC.CHARGETYPE = 8
THEN PJC.CHARGEAMOUNT*CTM.POSITIVENEGATIVEFLAG ELSE 0 END) FEE_AMOUNT,
SUM(CASE WHEN (PJC.CHARGECODE NOT IN ('FUEL','FUEX','DOMS','APC','APF','AFX','APT','APTF','KLIA2')) 
               and (dbo.isAncillaryFee(PJC.CHARGECODE) = 0) 
               and (PJC.CHARGETYPE not IN (0,1,7,19))
THEN PJC.CHARGEAMOUNT*CTM.POSITIVENEGATIVEFLAG ELSE 0 END) JOURNEY_CHARGE_OTHERS
INTO #PJCREVENUE 
 FROM
#PASSENGERS P
JOIN
ODS.PASSENGERJOURNEYCHARGE PJC
ON
P.PASSENGERID = PJC.PASSENGERID
AND
P.SEGMENTID = PJC.SEGMENTID
JOIN
DW.CHARGETYPEMATRIX CTM
ON
PJC.CHARGETYPE = CTM.CHARGETYPEID
GROUP BY
P.BOOKINGID,P.BOOKINGDATE,P.PASSENGERID,P.SEGMENTID,P.JOURNEYNUMBER,P.SEGMENTNUMBER,P.FAREJOURNEYTYPE,P.INVENTORYLEGID,P.CarrierCode,P.DepartureDate,
PJC.CURRENCYCODE,PJC.CREATEDDATE



BEGIN TRY DROP TABLE #PJCR END TRY BEGIN CATCH END CATCH

SELECT  CONVERT(DATE,PJR.BOOKINGDATE,110) BOOKINGDATE,PJR.CARRIERCODE, PJR.CURRENCYCODE,
SUM((CASE WHEN PJR.CURRENCYCODE = 'MYR' then PJR.FARE_REVENUE else PJR.FARE_REVENUE*(1/CC.CONVERSIONRATE)end)) FARE_REVENUE,
SUM((CASE WHEN PJR.CURRENCYCODE = 'MYR' then PJR.FUEL_AMOUNT else PJR.FUEL_AMOUNT*(1/CC.CONVERSIONRATE)end)) FUEL_AMOUNT,
SUM((CASE WHEN PJR.CURRENCYCODE = 'MYR' then PJR.FEE_AMOUNT else PJR.FEE_AMOUNT*(1/CC.CONVERSIONRATE)end)) FEE_AMOUNT,
SUM((CASE WHEN PJR.CURRENCYCODE = 'MYR' then PJR.JOURNEY_CHARGE_OTHERS else PJR.JOURNEY_CHARGE_OTHERS*(1/CC.CONVERSIONRATE)end)) JOURNEY_CHARGE_OTHERS,
COUNT(distinct segmentid) SEATSSOLD
INTO #PJCR
FROM
#PJCREVENUE PJR
LEFT JOIN
DW.CURRENCYCONVERSIONHISTORYDECOMPRESSED CC
ON
CONVERT(DATE,PJR.CREATEDDATE,110) = CONVERT(DATE,CC.CONVERSIONDATE,110)
AND
PJR.CURRENCYCODE = CC.TOCURRENCYCODE
AND
CC.FROMCURRENCYCODE = 'MYR'
GROUP BY CONVERT(DATE,PJR.BOOKINGDATE,110),PJR.CARRIERCODE,PJR.CURRENCYCODE



BEGIN TRY DROP TABLE #PFCREVENUE1 END TRY BEGIN CATCH END CATCH

SELECT P.*,PFC.CURRENCYCODE,PFC.CREATEDDATE,
0 FARE_REVENUE,
0 FUEL_AMOUNT,
SUM(CASE WHEN dbo.isAncillaryFee(PFC.CHARGECODE) = 1
THEN PFC.CHARGEAMOUNT*CTM.POSITIVENEGATIVEFLAG ELSE 0 END) FEE_AMOUNT,
0 JOURNEY_CHARGE_OTHERS

INTO #PFCREVENUE1
FROM
#PASSENGERS P
LEFT JOIN
ODS.PASSENGERFEE PF
ON
P.PASSENGERID = PF.PASSENGERID
AND
P.INVENTORYLEGID = PF.INVENTORYLEGID
AND
PF.INVENTORYLEGID <> '0'
JOIN
ODS.PASSENGERFEECHARGE PFC
ON
PF.PASSENGERID = PFC.PASSENGERID
AND
PF.FEECODE = PFC.CHARGECODE
AND
PF.FEENUMBER = PFC.FEENUMBER
JOIN
DW.CHARGETYPEMATRIX CTM
ON
PFC.CHARGETYPE = CTM.CHARGETYPEID
GROUP BY
P.BOOKINGID,P.BOOKINGDATE,P.PASSENGERID,P.SEGMENTID,P.JOURNEYNUMBER,P.SEGMENTNUMBER,P.FAREJOURNEYTYPE,P.INVENTORYLEGID,P.CarrierCode,P.DepartureDate,
PFC.CURRENCYCODE,PFC.CREATEDDATE


BEGIN TRY DROP TABLE #PFCR1 END TRY BEGIN CATCH END CATCH

SELECT  CONVERT(DATE,PFR1.BOOKINGDATE,110) BOOKINGDATE,PFR1.CARRIERCODE, PFR1.CURRENCYCODE,
SUM((CASE WHEN PFR1.CURRENCYCODE = 'MYR' then PFR1.FARE_REVENUE else PFR1.FARE_REVENUE*(1/CC.CONVERSIONRATE)end)) FARE_REVENUE,
SUM((CASE WHEN PFR1.CURRENCYCODE = 'MYR' then PFR1.FUEL_AMOUNT else PFR1.FUEL_AMOUNT*(1/CC.CONVERSIONRATE)end)) FUEL_AMOUNT,
SUM((CASE WHEN PFR1.CURRENCYCODE = 'MYR' then PFR1.FEE_AMOUNT else PFR1.FEE_AMOUNT*(1/CC.CONVERSIONRATE)end)) FEE_AMOUNT,
SUM((CASE WHEN PFR1.CURRENCYCODE = 'MYR' then PFR1.JOURNEY_CHARGE_OTHERS else PFR1.JOURNEY_CHARGE_OTHERS*(1/CC.CONVERSIONRATE)end)) JOURNEY_CHARGE_OTHERS,
0 SEATSSOLD
INTO #PFCR1
FROM
#PFCREVENUE1 PFR1
LEFT JOIN
DW.CURRENCYCONVERSIONHISTORYDECOMPRESSED CC
ON
CONVERT(DATE,PFR1.CREATEDDATE,110) = CONVERT(DATE,CC.CONVERSIONDATE,110)
AND
PFR1.CURRENCYCODE = CC.TOCURRENCYCODE
AND
CC.FROMCURRENCYCODE = 'MYR'
GROUP BY CONVERT(DATE,PFR1.BOOKINGDATE,110),PFR1.CARRIERCODE,PFR1.CURRENCYCODE



BEGIN TRY DROP TABLE #PFCREVENUE2 END TRY BEGIN CATCH END CATCH

SELECT P.*,PFC.CURRENCYCODE,PFC.CREATEDDATE,
0 FARE_REVENUE,
0 FUEL_AMOUNT,
SUM(CASE WHEN dbo.isAncillaryFee(PFC.CHARGECODE) = 1
THEN PFC.CHARGEAMOUNT*CTM.POSITIVENEGATIVEFLAG ELSE 0 END) FEE_AMOUNT,
0 JOURNEY_CHARGE_OTHERS

INTO #PFCREVENUE2
FROM
#PASSENGERS P
JOIN
ODS.PASSENGERFEE PF
ON
P.PASSENGERID = PF.PASSENGERID
AND
PF.INVENTORYLEGID = '0'
AND
P.JOURNEYNUMBER = 1 AND P.SEGMENTNUMBER = 1
JOIN
ODS.PASSENGERFEECHARGE PFC
ON
PF.PASSENGERID = PFC.PASSENGERID
AND
PF.FEECODE = PFC.CHARGECODE
AND
PF.FEENUMBER = PFC.FEENUMBER
JOIN
DW.CHARGETYPEMATRIX CTM
ON
PFC.CHARGETYPE = CTM.CHARGETYPEID
GROUP BY
P.BOOKINGID,P.BOOKINGDATE,P.PASSENGERID,P.SEGMENTID,P.JOURNEYNUMBER,P.SEGMENTNUMBER,P.FAREJOURNEYTYPE,P.INVENTORYLEGID,P.CarrierCode,P.DepartureDate,
PFC.CURRENCYCODE,PFC.CREATEDDATE




BEGIN TRY DROP TABLE #PFCR2 END TRY BEGIN CATCH END CATCH

SELECT  CONVERT(DATE,PFR2.BOOKINGDATE,110) BOOKINGDATE,PFR2.CARRIERCODE, PFR2.CURRENCYCODE,
SUM((CASE WHEN PFR2.CURRENCYCODE = 'MYR' then PFR2.FARE_REVENUE else PFR2.FARE_REVENUE*(1/CC.CONVERSIONRATE)end)) FARE_REVENUE,
SUM((CASE WHEN PFR2.CURRENCYCODE = 'MYR' then PFR2.FUEL_AMOUNT else PFR2.FUEL_AMOUNT*(1/CC.CONVERSIONRATE)end)) FUEL_AMOUNT,
SUM((CASE WHEN PFR2.CURRENCYCODE = 'MYR' then PFR2.FEE_AMOUNT else PFR2.FEE_AMOUNT*(1/CC.CONVERSIONRATE)end)) FEE_AMOUNT,
SUM((CASE WHEN PFR2.CURRENCYCODE = 'MYR' then PFR2.JOURNEY_CHARGE_OTHERS else PFR2.JOURNEY_CHARGE_OTHERS*(1/CC.CONVERSIONRATE)end)) JOURNEY_CHARGE_OTHERS,
0 SEATSSOLD
INTO #PFCR2
FROM
#PFCREVENUE2 PFR2
LEFT JOIN
DW.CURRENCYCONVERSIONHISTORYDECOMPRESSED CC
ON
CONVERT(DATE,PFR2.CREATEDDATE,110) = CONVERT(DATE,CC.CONVERSIONDATE,110)
AND
PFR2.CURRENCYCODE = CC.TOCURRENCYCODE
AND
CC.FROMCURRENCYCODE = 'MYR'
GROUP BY CONVERT(DATE,PFR2.BOOKINGDATE,110),PFR2.CARRIERCODE,PFR2.CURRENCYCODE

BEGIN TRY DROP TABLE #SALESBYCURRENCY END TRY BEGIN CATCH END CATCH

select BOOKINGDATE,carriercode,currencycode,
SUM (FARE_REVENUE) FARE_REVENUE, SUM(FUEL_AMOUNT) FUEL_AMOUNT, SUM(FEE_AMOUNT) FEE_AMOUNT, SUM(JOURNEY_CHARGE_OTHERS) JOURNEY_CHARGE_OTHERS, SUM(SEATSSOLD) SEATSSOLD
into #SALESBYCURRENCY
from
(
select * from #PJCR
union
select * from #PFCR1
union
select * from #PFCR2
) t
group by BOOKINGDATE,carriercode,currencycode
order by BOOKINGDATE,carriercode,currencycode



BEGIN TRY DROP TABLE #SALESBYCURRENCY_SECTOR END TRY BEGIN CATCH END CATCH

select BOOKINGDATE,carriercode, 
SUM (FARE_REVENUE) FARE_REVENUE, SUM(FUEL_AMOUNT) FUEL_AMOUNT, SUM(FEE_AMOUNT) FEE_AMOUNT, SUM(JOURNEY_CHARGE_OTHERS) JOURNEY_CHARGE_OTHERS, SUM(SEATSSOLD) SEATSSOLD
into #SALESBYCURRENCY_SECTOR
from #SALESBYCURRENCY
group by BOOKINGDATE,carriercode
order by BOOKINGDATE,carriercode


BEGIN TRY DROP TABLE #ASK_SECTOR END TRY BEGIN CATCH END CATCH

select ASK_SECTOR.CARRIERCODE,ASK_SECTOR.DEPARTUREDATE,ASK_SECTOR.SECTOR,ASK_SECTOR.DEPARTURESTATION, ASK_SECTOR.ArrivalSTATION,
ASK_SECTOR.CAPACITY,ASK_SECTOR.ASK 

into #ASK_SECTOR

from 
(SELECT CAP.CARRIERCODE,CAP.DEPARTUREDATE,CAP.SECTOR, CAP.DEPARTURESTATION, CAP.ArrivalSTATION,
CAP.CAPACITY,
(CASE WHEN CARRIERCODE = 'D7' then CAP.CAPACITY*ISNULL(ISNULL(DIS.DISTANCE,REV_DIS.DISTANCE),DIS2.DISTANCE)
      WHEN CARRIERCODE = 'XJ' then CAP.CAPACITY*ISNULL(ISNULL(DIS.DISTANCE,REV_DIS.DISTANCE),DIS2.DISTANCE)
      WHEN CARRIERCODE = 'XT' then CAP.CAPACITY*ISNULL(ISNULL(DIS.DISTANCE,REV_DIS.DISTANCE),DIS2.DISTANCE)
      ELSE CAP.CAPACITY*DIS2.DISTANCE
 END) ASK 
  
  FROM
  (
	 select  
		IL.CARRIERCODE,CONVERT(DATE,IL.DEPARTUREDATE,110) DEPARTUREDATE,
					IL.DEPARTURESTATION+IL.ARRIVALSTATION SECTOR,IL.DEPARTURESTATION, IL.ArrivalSTATION,
					SUM(IL.CAPACITY) CAPACITY 
		 from 
		 (select IL.* 
				  from ods.inventoryleg IL   
				  left join AAII_CHARTERED_FLIGHTS FLT
				  on FLT.Inventorylegid = IL.INVENTORYLEGID
				  where FLT.Inventorylegid is  null	  
				   and IL.CAPACITY > 0 AND IL.STATUS <> 2 AND IL.LID>0
					 AND IL.DEPARTUREDATE -->= '2013-12-20'
										   >= @FirstDayofYear 
					 AND IL.CARRIERCODE <> 'BF'
		   )IL
		   
		  Group by IL.CARRIERCODE,CONVERT(DATE,IL.DEPARTUREDATE,110),
					IL.DEPARTURESTATION+IL.ARRIVALSTATION,IL.DEPARTURESTATION, IL.ArrivalSTATION
  ) CAP
  LEFT JOIN
   (SELECT DISTINCT DEPARTURESTATION,ARRIVALSTATION,ACTUALDISTANCE DISTANCE FROM dw.citypair) DIS
    ON
    CAP.SECTOR = DIS.DEPARTURESTATION+DIS.ARRIVALSTATION
  LEFT JOIN
   (SELECT DISTINCT DEPARTURESTATION,ARRIVALSTATION,ACTUALDISTANCE DISTANCE FROM dw.citypair) REV_DIS
    ON
    CAP.SECTOR = REV_DIS.ARRIVALSTATION+REV_DIS.DEPARTURESTATION 
  LEFT JOIN
   (SELECT DISTINCT DEPARTURESTATION,ARRIVALSTATION,ACTUALDISTANCE DISTANCE FROM ods.distance) DIS2
    ON
    CAP.SECTOR = DIS2.DEPARTURESTATION+DIS2.ARRIVALSTATION 
 ) ASK_SECTOR
  order by DEPARTUREDATE,CARRIERCODE,SECTOR
  
  
BEGIN TRY DROP TABLE #ASK END TRY BEGIN CATCH END CATCH

select distinct ASK_SECTOR.CARRIERCODE,ASK_SECTOR.DEPARTUREDATE,ASK_SECTOR.SECTOR,
ISNULL(ST_CURR.Currency, ctry.DefaultCurrencyCode) ASK_CURRENCY,
ASK_SECTOR.CAPACITY,ASK_SECTOR.ASK
 INTO #ASK
from 
#ASK_SECTOR  ASK_SECTOR
inner join ods.station station on 
( station.stationcode = ASK_SECTOR.DEPARTURESTATION 
	or station.stationcode = ASK_SECTOR.ArrivalSTATION
)
left join REF_STATION_CURRENCY ST_CURR on ST_CURR.STATION = station.stationcode    
left join ods.country ctry on ctry.CountryCode = station.countrycode 
order by DEPARTUREDATE,CARRIERCODE,SECTOR,ISNULL(ST_CURR.Currency, ctry.DefaultCurrencyCode)


 BEGIN TRY DROP TABLE #CARRIERASK END TRY BEGIN CATCH END CATCH

 SELECT CARRIERCODE,DEPARTUREDATE,ASK_CURRENCY,SUM(ASK) ASK 
 INTO #CARRIERASK
 FROM #ASK
 GROUP BY CARRIERCODE,DEPARTUREDATE,ASK_CURRENCY 
 
 BEGIN TRY DROP TABLE #CARRIERASK_SECTOR END TRY BEGIN CATCH END CATCH

 SELECT CARRIERCODE,DEPARTUREDATE,SUM(ASK) ASK 
 INTO #CARRIERASK_SECTOR
 FROM #ASK_SECTOR
 GROUP BY CARRIERCODE,DEPARTUREDATE
 

BEGIN TRY DROP TABLE #FORWARDASK END TRY BEGIN CATCH END CATCH

SELECT A.CARRIERCODE,CONVERT(DATE,A.DEPARTUREDATE,110) DATE, A.ASK_CURRENCY,SUM(cast(B.ask as numeric)) ASK 
INTO #FORWARDASK
FROM
#CARRIERASK A
RIGHT JOIN
#CARRIERASK B
ON
A.CARRIERCODE = B.CARRIERCODE
AND
A.ASK_CURRENCY = B.ASK_CURRENCY
AND
CONVERT(DATE,B.DEPARTUREDATE,110) >= CONVERT(DATE,A.DEPARTUREDATE,110)
AND
CONVERT(DATE,B.DEPARTUREDATE,110) < DATEADD(DD,181,CONVERT(DATE,A.DEPARTUREDATE,110)) 
GROUP BY A.CARRIERCODE,CONVERT(DATE,A.DEPARTUREDATE,110),A.ASK_CURRENCY


 BEGIN TRY DROP TABLE #FORWARDASK_SECTOR END TRY BEGIN CATCH END CATCH
 
  SELECT A.CARRIERCODE,CONVERT(DATE,A.DEPARTUREDATE,110) DATE, SUM(cast(B.ask as numeric)) ASK 
  INTO #FORWARDASK_SECTOR
  FROM
  #CARRIERASK_SECTOR A
  RIGHT JOIN
  #CARRIERASK_SECTOR B
  ON
  A.CARRIERCODE = B.CARRIERCODE

  AND
  CONVERT(DATE,B.DEPARTUREDATE,110) >= CONVERT(DATE,A.DEPARTUREDATE,110)
  AND
  CONVERT(DATE,B.DEPARTUREDATE,110) < DATEADD(DD,181,CONVERT(DATE,A.DEPARTUREDATE,110)) 
  GROUP BY A.CARRIERCODE,CONVERT(DATE,A.DEPARTUREDATE,110)
  
  
  
   BEGIN TRY DROP TABLE TEMP_AAII_SALES_BY_BOOKINGCURRENCY_LIVE END TRY BEGIN CATCH END CATCH



   select t.* 
   INTO TEMP_AAII_SALES_BY_BOOKINGCURRENCY_LIVE
   
   from
   (  select    
              ISNULL( SALES.BOOKINGDATE, ASK.DATE) BOOKING_DATE,
			  ISNULL(SALES.CARRIERCODE,ASK.CARRIERCODE) CARRIER_CODE,
			  --ISNULL(SALES.CurrencyCode,ASK.ASK_CURRENCY) FOREIGN_CURRENCY_CODE,
			   (case when ISNULL(SALES.CurrencyCode,'')  = '' 
					then ASK.ASK_CURRENCY else SALES.CurrencyCode end) FOREIGN_CURRENCY_CODE,
			  SALES.SEATSSOLD,SALES.FARE_REVENUE,SALES.FUEL_AMOUNT,
			  SALES.FEE_AMOUNT,SALES.JOURNEY_CHARGE_OTHERS,ASK.ASK  
  
  
	  from (SELECT * FROM #SALESBYCURRENCY WHERE CARRIERCODE <> 'BF') SALES 
	  full outer join 
	  (select * from #FORWARDASK 
	  WHERE 
	  --date >= '2013-12-20' AND date < '2015-08-20'
	  date >= @StartDateUTC  AND date < @EndDateUTC
	  )ASK
	  ON
	  SALES.CARRIERCODE = ASK.CARRIERCODE
	  AND
	  ASK.DATE = SALES.BOOKINGDATE
	  and 
	  SALES.CurrencyCode = ASK.ASK_CURRENCY
	  
	 UNION
	  
	  select    
			  ISNULL( SALES.BOOKINGDATE, ASK.DATE) BOOKING_DATE,
			  ISNULL(SALES.CARRIERCODE,ASK.CARRIERCODE) CARRIER_CODE,
			  'Total' FOREIGN_CURRENCY_CODE,
			  SUM(SALES.SEATSSOLD) SEATSSOLD,SUM(SALES.FARE_REVENUE) FARE_REVENUE,
			  SUM(SALES.FUEL_AMOUNT) FUEL_AMOUNT,SUM(SALES.FEE_AMOUNT) FEE_AMOUNT,
			  SUM(SALES.JOURNEY_CHARGE_OTHERS) JOURNEY_CHARGE_OTHERS,AVG(ASK.ASK)  ASK 
  
  
	  from (SELECT * FROM #SALESBYCURRENCY_SECTOR WHERE CARRIERCODE <> 'BF') SALES 
	  full outer join 
	  (select * from #FORWARDASK_SECTOR 
	  WHERE 
	  --date >= '2013-12-20' AND date < '2015-08-20'
	  date >= @StartDateUTC  AND date < @EndDateUTC
	  )ASK
	  ON
	  SALES.CARRIERCODE = ASK.CARRIERCODE
	  AND
	  ASK.DATE = SALES.BOOKINGDATE
	  GROUP BY  ISNULL( SALES.BOOKINGDATE, ASK.DATE),
			  ISNULL(SALES.CARRIERCODE,ASK.CARRIERCODE)
	  
	)t
	

  
END 






GO


