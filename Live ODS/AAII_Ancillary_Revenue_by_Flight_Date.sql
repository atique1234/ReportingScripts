USE [REZAKWB01]
GO

/****** Object:  StoredProcedure [wb].[AAII_Ancillary_Revenue_by_Flight_Date]    Script Date: 10/22/2015 12:30:23 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO








-- =============================================
-- Author:		<Md. Azimuddin Khan>
-- Create date: <2015-02-12,,>
-- Description:	<Daily Ancillary Revenue by flight date>
-- =============================================

--ALTER PROCEDURE [wb].[AAII_Ancillary_Revenue_by_Flight_Date]

--AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

DECLARE @endDateUTC			 datetime,
			@MYDateUTC			 datetime,
			@departureStart      datetime,
			@departureEnd		 datetime,
			@test				 datetime
 

	--SET @MYDateUTC ='2011-02-16'
	
	--select @MYDateUTC  = ods.ConvertDate( 'MY', GETDATE(),0,0)
	select @MYDateUTC  = GETDATE()
	 --SET @departureStart =CAST(CONVERT(VARCHAR, DATEADD(s, 1,DATEADD(mm, DATEDIFF(m,0,DateAdd(month,0,@MYDateUTC)),0)), 101) AS DateTime) 
	SET @departureStart =CONVERT(DATETIME,datediff(day,0,dateadd(day,-1,@MYDateUTC)))
	SET @departureEnd   = DATEADD(MM,DATEDIFF(MM,0,DATEADD(MM,6,@departureStart)),0)
	SET @departureStart =DATEADD(MM,DATEDIFF(MM,0,DATEADD(MM,-1,@departureStart)),0)
	--SET @departureStart = '2015-10-20'
	--SET @departureEnd = '2015-10-23'
	

	print @MYDateUTC 
	print @departureStart
	print @departureEnd
	--print @test

BEGIN TRY DROP TABLE #PASSENGERS END TRY BEGIN CATCH END CATCH

SELECT PJS.DEPARTUREDATE,PJS.PASSENGERID,PJS.SEGMENTID, PJS.DEPARTURESTATION,PJS.ARRIVALSTATION,PJS.JOURNEYNUMBER,PJS.SEGMENTNUMBER,
PJL.INVENTORYLEGID,
isnull(carr_map.mappedcarrier ,IL.CARRIERCODE) CARRIERCODE,IL.FLIGHTNUMBER,PJS.INTERNATIONAL,DATEDIFF(MI,IL.STDUTC,IL.STAUTC) FLIGHT_DURATION
INTO #PASSENGERS
FROM
(SELECT  * FROM ODS.PASSENGERJOURNEYSEGMENT
WHERE DEPARTUREDATE >= @departureStart AND DepartureDate < @departureEnd AND BOOKINGSTATUS = 'HK') PJS
JOIN
ODS.PASSENGERJOURNEYLEG PJL
ON
PJS.PASSENGERID = PJL.PASSENGERID
AND
PJS.SEGMENTID = PJL.SEGMENTID
JOIN
ODS.INVENTORYLEG IL
ON
IL.INVENTORYLEGID = PJL.INVENTORYLEGID
AND IL.STATUS <> 2
AND IL.LID > 0
JOIN
ODS.BOOKINGPASSENGER BP
ON
BP.PASSENGERID = PJS.PASSENGERID
JOIN
ODS.BOOKING BK
ON
BK.BOOKINGID = BP.BOOKINGID
and BK.STATUS IN (2,3)
LEFT JOIN 
AAII_CARRIER_MAPPING carr_map
on carr_map.carriercode = il.carriercode
and ltrim(RTRIM(carr_map.flightnumber)) = ltrim(RTRIM(il.flightnumber))


BEGIN TRY DROP TABLE #PAX END TRY BEGIN CATCH END CATCH

SELECT CARRIERCODE,DEPARTUREDATE,DEPARTURESTATION,ARRIVALSTATION,FLIGHTNUMBER,FLIGHT_DURATION,COUNT(SEGMENTID) NO_OF_PAX
INTO #PAX
FROM #PASSENGERS
GROUP BY CARRIERCODE,DEPARTUREDATE,DEPARTURESTATION,ARRIVALSTATION,FLIGHTNUMBER,FLIGHT_DURATION


--fee from passengerfee table not filtered from AGSS since later the categorization is done based on fee code

BEGIN TRY DROP TABLE #FEEWITHIL END TRY BEGIN CATCH END CATCH

SELECT P.DEPARTUREDATE,P.PassengerID,P.SegmentID,P.DEPARTURESTATION,P.ARRIVALSTATION,P.JOURNEYNUMBER,P.SEGMENTNUMBER,P.INVENTORYLEGID,P.CARRIERCODE,P.FLIGHTNUMBER,P.INTERNATIONAL,P.FLIGHT_DURATION,
PF.FEENUMBER,PF.FEECODE,
PFC.CURRENCYCODE,PFC.CHARGETYPE,PFC.CHARGEAMOUNT,PFC.CREATEDDATE,
(CASE WHEN P.CARRIERCODE IN ('AK','D7') THEN 'MYR' 
	  WHEN P.CARRIERCODE IN ('FD','XJ') THEN 'THB'
	  WHEN P.CARRIERCODE = 'QZ' THEN 'IDR'
	  WHEN P.CARRIERCODE IN ('PQ','Z2') THEN 'PHP'
	  WHEN P.CARRIERCODE = 'I5' THEN 'INR'
	  WHEN P.CARRIERCODE = 'XT' THEN 'USD'
	  ELSE 'MYR' END) LOCALCURRENCYCODE

INTO #FEEWITHIL
FROM
#PASSENGERS P
LEFT JOIN
ODS.PASSENGERFEE PF
ON
P.PASSENGERID = PF.PASSENGERID
AND
P.INVENTORYLEGID = PF.INVENTORYLEGID
AND
PF.INVENTORYLEGID <> '0'
JOIN
ODS.PASSENGERFEECHARGE PFC
ON
PF.FEENUMBER = PFC.FEENUMBER
AND
PF.FEECODE = PFC.CHARGECODE
AND
PF.PASSENGERID = PFC.PASSENGERID


BEGIN TRY DROP TABLE #FEEWOIL END TRY BEGIN CATCH END CATCH

SELECT P.DEPARTUREDATE,P.PassengerID,P.SegmentID,P.DEPARTURESTATION,P.ARRIVALSTATION,P.JOURNEYNUMBER,P.SEGMENTNUMBER,P.INVENTORYLEGID,P.CARRIERCODE,P.FLIGHTNUMBER,P.INTERNATIONAL,P.FLIGHT_DURATION,
PF.FEENUMBER,PF.FEECODE,
PFC.CURRENCYCODE,PFC.CHARGETYPE,PFC.CHARGEAMOUNT,PFC.CREATEDDATE,
(CASE WHEN P.CARRIERCODE IN ('AK','D7') THEN 'MYR' 
	  WHEN P.CARRIERCODE IN ('FD','XJ') THEN 'THB'
	  WHEN P.CARRIERCODE = 'QZ' THEN 'IDR'
	  WHEN P.CARRIERCODE IN ('PQ','Z2') THEN 'PHP'
	  WHEN P.CARRIERCODE = 'I5' THEN 'INR'
	  WHEN P.CARRIERCODE = 'XT' THEN 'USD'
	  ELSE 'MYR' END) LOCALCURRENCYCODE

INTO #FEEWOIL
FROM
#PASSENGERS P
JOIN
ODS.PASSENGERFEE PF
ON
P.PASSENGERID = PF.PASSENGERID
AND
PF.INVENTORYLEGID = '0'
AND
P.JOURNEYNUMBER = 1 AND P.SEGMENTNUMBER = 1
JOIN
ODS.PASSENGERFEECHARGE PFC
ON
PF.FEENUMBER = PFC.FEENUMBER
AND
PF.FEECODE = PFC.CHARGECODE
AND
PF.PASSENGERID = PFC.PASSENGERID


BEGIN TRY DROP TABLE #FEEJOURNEY END TRY BEGIN CATCH END CATCH

SELECT P.DEPARTUREDATE,P.PassengerID,P.SegmentID,P.DEPARTURESTATION,P.ARRIVALSTATION,P.JOURNEYNUMBER,P.SEGMENTNUMBER,P.INVENTORYLEGID,P.CARRIERCODE,P.FLIGHTNUMBER,P.INTERNATIONAL,P.FLIGHT_DURATION,
PJC.CHARGENUMBER,(CASE WHEN PJC.CHARGETYPE = 8 THEN 'ConnectingFee' ELSE PJC.CHARGECODE END)FEECODE,
PJC.CURRENCYCODE,PJC.CHARGETYPE,PJC.CHARGEAMOUNT,PJC.CREATEDDATE,
(CASE WHEN P.CARRIERCODE IN ('AK','D7') THEN 'MYR' 
	  WHEN P.CARRIERCODE IN ('FD','XJ') THEN 'THB'
	  WHEN P.CARRIERCODE = 'QZ' THEN 'IDR'
	  WHEN P.CARRIERCODE IN ('PQ','Z2') THEN 'PHP'
	  WHEN P.CARRIERCODE = 'I5' THEN 'INR'
	  WHEN P.CARRIERCODE = 'XT' THEN 'USD'
	  ELSE 'MYR' END) LOCALCURRENCYCODE

INTO #FEEJOURNEY
FROM
#PASSENGERS P
JOIN
ODS.PASSENGERJOURNEYCHARGE PJC
ON
P.PASSENGERID = PJC.PASSENGERID
AND
P.SEGMENTID = PJC.SEGMENTID
AND
(dbo.isAncillaryFee(PJC.CHARGECODE) = 1 OR CHARGETYPE = 8)




BEGIN TRY DROP TABLE #FEEFINAL END TRY BEGIN CATCH END CATCH

SELECT * INTO #FEEFINAL
FROM 
(SELECT * FROM #FEEWITHIL
UNION
SELECT * FROM #FEEWOIL
UNION
SELECT * FROM #FEEJOURNEY
)X




BEGIN TRY DROP TABLE #FEELOCALCURRENCY END TRY BEGIN CATCH END CATCH

SELECT FF.*,CC.CONVERSIONRATE,
(CASE WHEN FF.CURRENCYCODE = FF.LOCALCURRENCYCODE THEN FF.CHARGEAMOUNT ELSE FF.CHARGEAMOUNT*(1/CC.CONVERSIONRATE) END) CHARGEAMOUNT_LOCALCURRENCY,
(CASE WHEN FF.CURRENCYCODE = 'MYR' THEN FF.CHARGEAMOUNT ELSE FF.CHARGEAMOUNT*(1/isnull(CC_MYR.CONVERSIONRATE,1)) END) CHARGEAMOUNT_MYR
 
 INTO #FEELOCALCURRENCY
FROM
#FEEFINAL FF
LEFT JOIN
DW.CURRENCYCONVERSIONHISTORYDECOMPRESSED CC
ON
CONVERT(DATE,FF.CREATEDDATE,110) = CONVERT(DATE,CC.CONVERSIONDATE,110)
AND
FF.CURRENCYCODE = CC.TOCURRENCYCODE
AND
FF.LOCALCURRENCYCODE = CC.FROMCURRENCYCODE
LEFT JOIN
DW.CURRENCYCONVERSIONHISTORYDECOMPRESSED CC_MYR
ON
CONVERT(DATE,FF.CREATEDDATE,110) = CONVERT(DATE,CC_MYR.CONVERSIONDATE,110)
AND
FF.CURRENCYCODE = CC_MYR.TOCURRENCYCODE
AND
CC_MYR.FROMCURRENCYCODE = 'MYR'


BEGIN TRY DROP TABLE #FEEALL END TRY BEGIN CATCH END CATCH



SELECT FL.DEPARTUREDATE,FL.PASSENGERID,FL.SEGMENTID,FL.DEPARTURESTATION,FL.ARRIVALSTATION,DS.SHORTNAME DEPARTURESTATIONNAME,ARS.SHORTNAME ARRIVALSTATIONNAME,
DC.COUNTRYCODE DEPARTURECOUNTRYCODE,AC.COUNTRYCODE ARRIVALCOUNTRYCODE,DC.Name DepartureCountry,AC.Name ArrivalCountry,
FL.INVENTORYLEGID,FL.CARRIERCODE,FL.FLIGHTNUMBER,FL.INTERNATIONAL,FL.FLIGHT_DURATION,FL.FEENUMBER,FL.FEECODE,FL.LOCALCURRENCYCODE,
F.NAME SSRDESC,
SUM(case when FL.chargetype in (1,2,3,7,11,16) then -1 * FL.chargeamount_LOCALCURRENCY else FL.chargeamount_LOCALCURRENCY end) as AMOUNT,
SUM(case when FL.chargetype in (1,2,3,7,11,16) then -1 * FL.CHARGEAMOUNT_MYR else FL.CHARGEAMOUNT_MYR end) as AMOUNT_MYR  
INTO #FEEALL
FROM 
#FEELOCALCURRENCY FL
LEFT JOIN
ODS.FEE F
ON
FL.FEECODE = F.FEECODE
LEFT JOIN
ODS.STATION DS
ON
FL.DEPARTURESTATION = DS.STATIONCODE
LEFT JOIN
ODS.STATION ARS
ON
FL.ARRIVALSTATION = ARS.STATIONCODE
LEFT JOIN
ODS.COUNTRY DC
ON
DS.CountryCode = DC.CountryCode
LEFT JOIN
ODS.COUNTRY AC
ON
ARS.CountryCode = AC.CountryCode
GROUP BY FL.DEPARTUREDATE,FL.PASSENGERID,FL.SEGMENTID,FL.DEPARTURESTATION,FL.ARRIVALSTATION,DS.SHORTNAME,ARS.SHORTNAME,
DC.COUNTRYCODE,AC.COUNTRYCODE,DC.Name,AC.Name,
FL.INVENTORYLEGID,FL.CARRIERCODE,FL.FLIGHTNUMBER,FL.INTERNATIONAL,FL.FLIGHT_DURATION,FL.FEENUMBER,FL.FEECODE,FL.LOCALCURRENCYCODE,
F.NAME






BEGIN TRY DROP TABLE #ANCILLARYREVENUE END TRY BEGIN CATCH END CATCH

SELECT DEPARTUREDATE,INVENTORYLEGID,CARRIERCODE,FLIGHTNUMBER,
(CASE WHEN ASCII(SUBSTRING(DEPARTURESTATION,1,1)) < ASCII(SUBSTRING(ARRIVALSTATION,1,1)) THEN DEPARTURESTATION + ARRIVALSTATION
	  WHEN ASCII(SUBSTRING(DEPARTURESTATION,1,1)) > ASCII(SUBSTRING(ARRIVALSTATION,1,1)) THEN ArrivalStation + DepartureStation
	  ELSE 
		CASE WHEN ASCII(SUBSTRING(DEPARTURESTATION,2,1)) < ASCII(SUBSTRING(ARRIVALSTATION,2,1)) THEN DEPARTURESTATION + ARRIVALSTATION
		WHEN ASCII(SUBSTRING(DEPARTURESTATION,2,1)) > ASCII(SUBSTRING(ARRIVALSTATION,2,1)) THEN ArrivalStation + DepartureStation
		ELSE
			CASE WHEN ASCII(SUBSTRING(DEPARTURESTATION,3,1)) < ASCII(SUBSTRING(ARRIVALSTATION,3,1)) THEN DEPARTURESTATION + ARRIVALSTATION
			WHEN ASCII(SUBSTRING(DEPARTURESTATION,3,1)) > ASCII(SUBSTRING(ARRIVALSTATION,3,1)) THEN ArrivalStation + DepartureStation
			ELSE DEPARTURESTATION+ARRIVALSTATION 
			END
		END
	 END) ROUTE

,DEPARTURESTATION+ARRIVALSTATION SECTOR,DEPARTURESTATIONNAME,ARRIVALSTATIONNAME,
(CASE WHEN ASCII(SUBSTRING(DEPARTURECOUNTRYCODE,1,1)) < ASCII(SUBSTRING(ARRIVALCOUNTRYCODE,1,1)) THEN DEPARTURECOUNTRYCODE + ARRIVALCOUNTRYCODE
	  WHEN ASCII(SUBSTRING(DEPARTURECOUNTRYCODE,1,1)) > ASCII(SUBSTRING(ARRIVALCOUNTRYCODE,1,1)) THEN ARRIVALCOUNTRYCODE + DEPARTURECOUNTRYCODE
	  ELSE 
		CASE WHEN ASCII(SUBSTRING(DEPARTURECOUNTRYCODE,2,1)) < ASCII(SUBSTRING(ARRIVALCOUNTRYCODE,2,1)) THEN DEPARTURECOUNTRYCODE + ARRIVALCOUNTRYCODE
		WHEN ASCII(SUBSTRING(DEPARTURECOUNTRYCODE,2,1)) > ASCII(SUBSTRING(ARRIVALCOUNTRYCODE,2,1)) THEN ARRIVALCOUNTRYCODE + DEPARTURECOUNTRYCODE
		ELSE DEPARTURECOUNTRYCODE+ARRIVALCOUNTRYCODE 
		END
	 END) COUNTRYPAIR,
DEPARTURECOUNTRYCODE+ARRIVALCOUNTRYCODE COUNTRYOD,DEPARTURECOUNTRY,ARRIVALCOUNTRY,
INTERNATIONAL,FLIGHT_DURATION,FEECODE,SSRDESC,
COUNT(SEGMENTID) QUANTITY,SUM(AMOUNT) REVENUE,SUM(AMOUNT_MYR) REVENUE_MYR

INTO #ANCILLARYREVENUE
FROM #FEEALL
GROUP BY DEPARTUREDATE,INVENTORYLEGID,CARRIERCODE,FLIGHTNUMBER,
(CASE WHEN ASCII(SUBSTRING(DEPARTURESTATION,1,1)) < ASCII(SUBSTRING(ARRIVALSTATION,1,1)) THEN DEPARTURESTATION + ARRIVALSTATION
	  WHEN ASCII(SUBSTRING(DEPARTURESTATION,1,1)) > ASCII(SUBSTRING(ARRIVALSTATION,1,1)) THEN ArrivalStation + DepartureStation
	  ELSE 
		CASE WHEN ASCII(SUBSTRING(DEPARTURESTATION,2,1)) < ASCII(SUBSTRING(ARRIVALSTATION,2,1)) THEN DEPARTURESTATION + ARRIVALSTATION
		WHEN ASCII(SUBSTRING(DEPARTURESTATION,2,1)) > ASCII(SUBSTRING(ARRIVALSTATION,2,1)) THEN ArrivalStation + DepartureStation
		ELSE
			CASE WHEN ASCII(SUBSTRING(DEPARTURESTATION,3,1)) < ASCII(SUBSTRING(ARRIVALSTATION,3,1)) THEN DEPARTURESTATION + ARRIVALSTATION
			WHEN ASCII(SUBSTRING(DEPARTURESTATION,3,1)) > ASCII(SUBSTRING(ARRIVALSTATION,3,1)) THEN ArrivalStation + DepartureStation
			ELSE DEPARTURESTATION+ARRIVALSTATION 
			END
		END
	 END)

,DEPARTURESTATION+ARRIVALSTATION,DEPARTURESTATIONNAME,ARRIVALSTATIONNAME,
(CASE WHEN ASCII(SUBSTRING(DEPARTURECOUNTRYCODE,1,1)) < ASCII(SUBSTRING(ARRIVALCOUNTRYCODE,1,1)) THEN DEPARTURECOUNTRYCODE + ARRIVALCOUNTRYCODE
	  WHEN ASCII(SUBSTRING(DEPARTURECOUNTRYCODE,1,1)) > ASCII(SUBSTRING(ARRIVALCOUNTRYCODE,1,1)) THEN ARRIVALCOUNTRYCODE + DEPARTURECOUNTRYCODE
	  ELSE 
		CASE WHEN ASCII(SUBSTRING(DEPARTURECOUNTRYCODE,2,1)) < ASCII(SUBSTRING(ARRIVALCOUNTRYCODE,2,1)) THEN DEPARTURECOUNTRYCODE + ARRIVALCOUNTRYCODE
		WHEN ASCII(SUBSTRING(DEPARTURECOUNTRYCODE,2,1)) > ASCII(SUBSTRING(ARRIVALCOUNTRYCODE,2,1)) THEN ARRIVALCOUNTRYCODE + DEPARTURECOUNTRYCODE
		ELSE DEPARTURECOUNTRYCODE+ARRIVALCOUNTRYCODE 
		END
	 END),
DEPARTURECOUNTRYCODE+ARRIVALCOUNTRYCODE,DEPARTURECOUNTRY,ARRIVALCOUNTRY,
INTERNATIONAL,FLIGHT_DURATION,FEECODE,SSRDESC


BEGIN TRY DROP TABLE AAII_TEMP_ANCILLARY_REVENUE END TRY BEGIN CATCH END CATCH


SELECT AR.DEPARTUREDATE,AR.CARRIERCODE,AR.flightnumber,AR.ROUTE,AR.SECTOR,
Ar.DEPARTURESTATIONNAME,AR.ARRIVALSTATIONNAME, AR.COUNTRYPAIR,AR.COUNTRYOD,
AR.DepartureCountry,AR.ArrivalCountry,AR.INTERNATIONAL,AR.FLIGHT_DURATION,
AR.FEECODE,AR.SSRDESC,AR.QUANTITY,AR.REVENUE,AR.REVENUE_MYR,
isnull(HUB.HUB,'hub') HUB,P.NO_OF_PAX,IL.CAPACITY 
INTO AAII_TEMP_ANCILLARY_REVENUE
FROM
#ANCILLARYREVENUE AR
LEFT JOIN
#PAX P
ON
AR.DEPARTUREDATE = P.DEPARTUREDATE
AND
AR.CARRIERCODE = P.CARRIERCODE
AND
AR.SECTOR = P.DEPARTURESTATION+P.ARRIVALSTATION
AND
AR.FLIGHTNUMBER = P.FLIGHTNUMBER
AND
AR.FLIGHT_DURATION = P.FLIGHT_DURATION
LEFT JOIN
ODS.INVENTORYLEG IL
ON
AR.INVENTORYLEGID = IL.INVENTORYLEGID

LEFT JOIN
(SELECT DISTINCT CARRIERCODE,FlightNumber,DepartureStation,ArrivalStation,Hub FROM SAT_Hub_info_version_v3 WHERE LEN(HUB) < 6) HUB
ON
AR.CARRIERCODE = HUB.CARRIERCODE
AND
LTRIM(RTRIM(AR.FLIGHTNUMBER)) = LTRIM(RTRIM(HUB.FLIGHTNUMBER))
AND
AR.SECTOR = HUB.DEPARTURESTATION+HUB.ARRIVALSTATION 


--SELECT * FROM AAII_TEMP_ANCILLARY_REVENUE


END


















GO


